Index: src/main_model/main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from data_processing import load_data, prepare_data, oversample_data, split_data, augment_data, expand_data\r\nfrom model_training import train_mlp_classifier, train_voting_classifier\r\nfrom evaluation import evaluate_model, cross_validate_model, plot_roc_curves, plot_confusion_matrix\r\nfrom prediction import predict_new_data\r\n\r\n\r\ndef main():\r\n    # Load and prepare data\r\n    data = load_data('cleaned_all_data_processed.csv')\r\n    X, y = prepare_data(data)\r\n    X_train, X_test, y_train, y_test = split_data(X, y)\r\n    X_train, y_train = oversample_data(X_train, y_train)\r\n    X_test = expand_data(X_test, 10)\r\n    y_test = expand_data(y_test, 10)\r\n\r\n    # data_argument\r\n    X_train, y_train = augment_data(X_train, y_train, target_size=10000)\r\n    print(\"Load and prepare data completed\")\r\n\r\n    # Train classifiers\r\n    print(\"Start training...\")\r\n    mlp_classifier = train_mlp_classifier(X_train, y_train)\r\n    voting_classifier = train_voting_classifier(X_train, y_train, mlp_classifier)\r\n\r\n    # Evaluate model\r\n    print(\"Start evaluating...\")\r\n    evaluate_model(voting_classifier, X_test, y_test, y)\r\n\r\n    # Predict on new data\r\n    print(\"Predict on new data...\")\r\n    predict_new_data(voting_classifier, 'candidate_processed4.csv')\r\n\r\n    # Cross-validate model\r\n    print(\"Cross-validate model..\")\r\n    cross_validate_model(voting_classifier, X, y)\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main_model/main.py b/src/main_model/main.py
--- a/src/main_model/main.py	(revision ea7b7a629b5089b42e82960aa8092cb53f3b2086)
+++ b/src/main_model/main.py	(date 1721108766132)
@@ -2,8 +2,6 @@
 from model_training import train_mlp_classifier, train_voting_classifier
 from evaluation import evaluate_model, cross_validate_model, plot_roc_curves, plot_confusion_matrix
 from prediction import predict_new_data
-
-
 def main():
     # Load and prepare data
     data = load_data('cleaned_all_data_processed.csv')
@@ -34,6 +32,9 @@
     print("Cross-validate model..")
     cross_validate_model(voting_classifier, X, y)
 
-
 if __name__ == "__main__":
     main()
+
+
+
+
